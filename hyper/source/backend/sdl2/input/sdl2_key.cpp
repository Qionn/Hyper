#include "sdl2_key.h"

#include <SDL.h>

namespace hyper
{
	int KeyToSDL2Key(Key key)
	{
		switch (key)
		{
			case Key::e0:				return SDLK_0;
			case Key::e1:				return SDLK_1;
			case Key::e2:				return SDLK_2;
			case Key::e3:				return SDLK_3;
			case Key::e4:				return SDLK_4;
			case Key::e5:				return SDLK_5;
			case Key::e6:				return SDLK_6;
			case Key::e7:				return SDLK_7;
			case Key::e8:				return SDLK_8;
			case Key::e9:				return SDLK_9;
			case Key::eA:				return SDLK_a;
			case Key::eB:				return SDLK_b;
			case Key::eC:				return SDLK_c;
			case Key::eD:				return SDLK_d;
			case Key::eE:				return SDLK_e;
			case Key::eF:				return SDLK_f;
			case Key::eG:				return SDLK_g;
			case Key::eH:				return SDLK_h;
			case Key::eI:				return SDLK_i;
			case Key::eJ:				return SDLK_j;
			case Key::eK:				return SDLK_k;
			case Key::eL:				return SDLK_l;
			case Key::eM:				return SDLK_m;
			case Key::eN:				return SDLK_n;
			case Key::eO:				return SDLK_o;
			case Key::eP:				return SDLK_p;
			case Key::eQ:				return SDLK_q;
			case Key::eR:				return SDLK_r;
			case Key::eS:				return SDLK_s;
			case Key::eT:				return SDLK_t;
			case Key::eU:				return SDLK_u;
			case Key::eV:				return SDLK_v;
			case Key::eW:				return SDLK_w;
			case Key::eX:				return SDLK_x;
			case Key::eY:				return SDLK_y;
			case Key::eZ:				return SDLK_z;
			case Key::eBackspace:		return SDLK_BACKSPACE;
			case Key::eTab:				return SDLK_TAB;
			case Key::eEnter:			return SDLK_RETURN;
			case Key::eLeftShift:		return SDLK_LSHIFT;
			case Key::eRightShift:		return SDLK_RSHIFT;
			case Key::eLeftControl:		return SDLK_LCTRL;
			case Key::eRightControl:	return SDLK_RCTRL;
			case Key::eLeftAlt:			return SDLK_LALT;
			case Key::eRightAlt:		return SDLK_RALT;
			case Key::ePause:			return SDLK_PAUSE;
			case Key::eCapslock:		return SDLK_CAPSLOCK;
			case Key::eEscape:			return SDLK_ESCAPE;
			case Key::eSpace:			return SDLK_SPACE;
			case Key::ePageup:			return SDLK_PAGEUP;
			case Key::ePagedown:		return SDLK_PAGEDOWN;
			case Key::eEnd:				return SDLK_END;
			case Key::eHome:			return SDLK_HOME;
			case Key::eUp:				return SDLK_UP;
			case Key::eDown:			return SDLK_DOWN;
			case Key::eLeft:			return SDLK_LEFT;
			case Key::eRight:			return SDLK_RIGHT;
			case Key::ePrintScreen:		return SDLK_PRINTSCREEN;
			case Key::eInsert:			return SDLK_INSERT;
			case Key::eDelete:			return SDLK_DELETE;
			case Key::eNumpad0:			return SDLK_KP_0;
			case Key::eNumpad1:			return SDLK_KP_1;
			case Key::eNumpad2:			return SDLK_KP_2;
			case Key::eNumpad3:			return SDLK_KP_3;
			case Key::eNumpad4:			return SDLK_KP_4;
			case Key::eNumpad5:			return SDLK_KP_5;
			case Key::eNumpad6:			return SDLK_KP_6;
			case Key::eNumpad7:			return SDLK_KP_7;
			case Key::eNumpad8:			return SDLK_KP_8;
			case Key::eNumpad9:			return SDLK_KP_9;
			case Key::eMultiply:		return SDLK_KP_MULTIPLY;
			case Key::eAdd:				return SDLK_KP_PLUS;
			case Key::eSubtract:		return SDLK_KP_MINUS;
			case Key::eDecimal:			return SDLK_KP_DECIMAL;
			case Key::eDivide:			return SDLK_KP_DIVIDE;
			case Key::eF1:				return SDLK_F1;
			case Key::eF2:				return SDLK_F2;
			case Key::eF3:				return SDLK_F3;
			case Key::eF4:				return SDLK_F4;
			case Key::eF5:				return SDLK_F5;
			case Key::eF6:				return SDLK_F6;
			case Key::eF7:				return SDLK_F7;
			case Key::eF8:				return SDLK_F8;
			case Key::eF9:				return SDLK_F9;
			case Key::eF10:				return SDLK_F10;
			case Key::eF11:				return SDLK_F11;
			case Key::eF12:				return SDLK_F12;
			case Key::eF13:				return SDLK_F13;
			case Key::eF14:				return SDLK_F14;
			case Key::eF15:				return SDLK_F15;
			case Key::eF16:				return SDLK_F16;
			case Key::eF17:				return SDLK_F17;
			case Key::eF18:				return SDLK_F18;
			case Key::eF19:				return SDLK_F19;
			case Key::eF20:				return SDLK_F20;
			case Key::eF21:				return SDLK_F21;
			case Key::eF22:				return SDLK_F22;
			case Key::eF23:				return SDLK_F23;
			case Key::eF24:				return SDLK_F24;
			default:			return -1;
		}
	}

	Key SDL2KeyToKey(int key)
	{
		switch (key)
		{
			case SDLK_0:				return Key::e0;
			case SDLK_1:				return Key::e1;
			case SDLK_2:				return Key::e2;
			case SDLK_3:				return Key::e3;
			case SDLK_4:				return Key::e4;
			case SDLK_5:				return Key::e5;
			case SDLK_6:				return Key::e6;
			case SDLK_7:				return Key::e7;
			case SDLK_8:				return Key::e8;
			case SDLK_9:				return Key::e9;
			case SDLK_a:				return Key::eA;
			case SDLK_b:				return Key::eB;
			case SDLK_c:				return Key::eC;
			case SDLK_d:				return Key::eD;
			case SDLK_e:				return Key::eE;
			case SDLK_f:				return Key::eF;
			case SDLK_g:				return Key::eG;
			case SDLK_h:				return Key::eH;
			case SDLK_i:				return Key::eI;
			case SDLK_j:				return Key::eJ;
			case SDLK_k:				return Key::eK;
			case SDLK_l:				return Key::eL;
			case SDLK_m:				return Key::eM;
			case SDLK_n:				return Key::eN;
			case SDLK_o:				return Key::eO;
			case SDLK_p:				return Key::eP;
			case SDLK_q:				return Key::eQ;
			case SDLK_r:				return Key::eR;
			case SDLK_s:				return Key::eS;
			case SDLK_t:				return Key::eT;
			case SDLK_u:				return Key::eU;
			case SDLK_v:				return Key::eV;
			case SDLK_w:				return Key::eW;
			case SDLK_x:				return Key::eX;
			case SDLK_y:				return Key::eY;
			case SDLK_z:				return Key::eZ;
			case SDLK_BACKSPACE:		return Key::eBackspace;
			case SDLK_TAB:				return Key::eTab;
			case SDLK_RETURN:			return Key::eEnter;
			case SDLK_LSHIFT:			return Key::eLeftShift;
			case SDLK_RSHIFT:			return Key::eRightShift;
			case SDLK_LCTRL:			return Key::eLeftControl;
			case SDLK_RCTRL:			return Key::eRightControl;
			case SDLK_LALT:				return Key::eLeftAlt;
			case SDLK_RALT:				return Key::eRightAlt;
			case SDLK_PAUSE:			return Key::ePause;
			case SDLK_CAPSLOCK:			return Key::eCapslock;
			case SDLK_ESCAPE:			return Key::eEscape;
			case SDLK_SPACE:			return Key::eSpace;
			case SDLK_PAGEUP:			return Key::ePageup;
			case SDLK_PAGEDOWN:			return Key::ePagedown;
			case SDLK_END:				return Key::eEnd;
			case SDLK_HOME:				return Key::eHome;
			case SDLK_UP:				return Key::eUp;
			case SDLK_DOWN:				return Key::eDown;
			case SDLK_LEFT:				return Key::eLeft;
			case SDLK_RIGHT:			return Key::eRight;
			case SDLK_PRINTSCREEN:		return Key::ePrintScreen;
			case SDLK_INSERT:			return Key::eInsert;
			case SDLK_DELETE:			return Key::eDelete;
			case SDLK_KP_0:				return Key::eNumpad0;
			case SDLK_KP_1:				return Key::eNumpad1;
			case SDLK_KP_2:				return Key::eNumpad2;
			case SDLK_KP_3:				return Key::eNumpad3;
			case SDLK_KP_4:				return Key::eNumpad4;
			case SDLK_KP_5:				return Key::eNumpad5;
			case SDLK_KP_6:				return Key::eNumpad6;
			case SDLK_KP_7:				return Key::eNumpad7;
			case SDLK_KP_8:				return Key::eNumpad8;
			case SDLK_KP_9:				return Key::eNumpad9;
			case SDLK_KP_MULTIPLY:		return Key::eMultiply;
			case SDLK_KP_PLUS:			return Key::eAdd;
			case SDLK_KP_MINUS:			return Key::eSubtract;
			case SDLK_KP_DECIMAL:		return Key::eDecimal;
			case SDLK_KP_DIVIDE:		return Key::eDivide;
			case SDLK_F1:				return Key::eF1;
			case SDLK_F2:				return Key::eF2;
			case SDLK_F3:				return Key::eF3;
			case SDLK_F4:				return Key::eF4;
			case SDLK_F5:				return Key::eF5;
			case SDLK_F6:				return Key::eF6;
			case SDLK_F7:				return Key::eF7;
			case SDLK_F8:				return Key::eF8;
			case SDLK_F9:				return Key::eF9;
			case SDLK_F10:				return Key::eF10;
			case SDLK_F11:				return Key::eF11;
			case SDLK_F12:				return Key::eF12;
			case SDLK_F13:				return Key::eF13;
			case SDLK_F14:				return Key::eF14;
			case SDLK_F15:				return Key::eF15;
			case SDLK_F16:				return Key::eF16;
			case SDLK_F17:				return Key::eF17;
			case SDLK_F18:				return Key::eF18;
			case SDLK_F19:				return Key::eF19;
			case SDLK_F20:				return Key::eF20;
			case SDLK_F21:				return Key::eF21;
			case SDLK_F22:				return Key::eF22;
			case SDLK_F23:				return Key::eF23;
			case SDLK_F24:				return Key::eF24;
			default:					return Key::eUnknown;
		}
	}
}
